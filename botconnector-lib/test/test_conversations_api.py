# coding: utf-8

"""
    Microsoft Bot Connector API - v3.0

    The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    Â© 2016 Microsoft

    The version of the OpenAPI document: v3
    Contact: botframework@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bot_connector.api.conversations_api import ConversationsApi


class TestConversationsApi(unittest.TestCase):
    """ConversationsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ConversationsApi()

    def tearDown(self) -> None:
        pass

    def test_conversations_create_conversation(self) -> None:
        """Test case for conversations_create_conversation

        CreateConversation
        """
        pass

    def test_conversations_delete_activity(self) -> None:
        """Test case for conversations_delete_activity

        DeleteActivity
        """
        pass

    def test_conversations_delete_conversation_member(self) -> None:
        """Test case for conversations_delete_conversation_member

        DeleteConversationMember
        """
        pass

    def test_conversations_get_activity_members(self) -> None:
        """Test case for conversations_get_activity_members

        GetActivityMembers
        """
        pass

    def test_conversations_get_conversation_members(self) -> None:
        """Test case for conversations_get_conversation_members

        GetConversationMembers
        """
        pass

    def test_conversations_get_conversation_paged_members(self) -> None:
        """Test case for conversations_get_conversation_paged_members

        GetConversationPagedMembers
        """
        pass

    def test_conversations_get_conversations(self) -> None:
        """Test case for conversations_get_conversations

        GetConversations
        """
        pass

    def test_conversations_reply_to_activity(self) -> None:
        """Test case for conversations_reply_to_activity

        ReplyToActivity
        """
        pass

    def test_conversations_send_conversation_history(self) -> None:
        """Test case for conversations_send_conversation_history

        SendConversationHistory
        """
        pass

    def test_conversations_send_to_conversation(self) -> None:
        """Test case for conversations_send_to_conversation

        SendToConversation
        """
        pass

    def test_conversations_update_activity(self) -> None:
        """Test case for conversations_update_activity

        UpdateActivity
        """
        pass

    def test_conversations_upload_attachment(self) -> None:
        """Test case for conversations_upload_attachment

        UploadAttachment
        """
        pass


if __name__ == '__main__':
    unittest.main()
